load python3 23-06 for pytorch (with numpy 1.24.3, scikit-learn 1.2.2, torch 1.12.1,  more details: pip list)
Initializing distributed: GLOBAL_RANK: 3, MEMBER: 4/8
Initializing distributed: GLOBAL_RANK: 6, MEMBER: 7/8
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/8
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/8
Initializing distributed: GLOBAL_RANK: 7, MEMBER: 8/8
Initializing distributed: GLOBAL_RANK: 5, MEMBER: 6/8
Initializing distributed: GLOBAL_RANK: 4, MEMBER: 5/8
wandb: Currently logged in as: aghiles-kebaili. Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.15.4
wandb: Run data is saved locally in ./wandb/run-20230619_143027-dwt89gxx
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run Training
wandb: ‚≠êÔ∏è View project at https://wandb.ai/aghiles-kebaili/discrimnative-hvae-for-accurate-tumor-segmentation
wandb: üöÄ View run at https://wandb.ai/aghiles-kebaili/discrimnative-hvae-for-accurate-tumor-segmentation/runs/dwt89gxx
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/8
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 8 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 3 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
LOCAL_RANK: 3 - CUDA_VISIBLE_DEVICES: [0,1,2,3]

  | Name               | Type                    | Params
---------------------------------------------------------------
0 | encoder            | Encoder                 | 35.2 M
1 | decoder            | Decoder                 | 26.9 M
2 | positional_encoder | TimePositionalEmbedding | 0     
3 | regularization     | LPIPSWithDiscriminator  | 17.5 M
---------------------------------------------------------------
64.8 M    Trainable params
14.7 M    Non-trainable params
79.5 M    Total params
318.174   Total estimated model params size (MB)
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
SLURM auto-requeueing enabled. Setting signal handlers.
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    return forward_call(*input, **kwargs)
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    x = resnet_block(x, temb)
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    input = module(input)
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return forward_call(*input, **kwargs)
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:2 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
    return F.linear(input, self.weight, self.bias)
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:3 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:1 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
Traceback (most recent call last):
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:1 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:3 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
Traceback (most recent call last):
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/main.py", line 75, in <module>
    trainer.fit(model=model, datamodule=datamodule)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 531, in fit
    call._call_and_handle_interrupt(
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 41, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 91, in launch
    return function(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 570, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 975, in _run
    results = self._run_stage()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1018, in _run_stage
    self.fit_loop.run()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 201, in run
    self.advance()
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 220, in advance
    batch_output = self.manual_optimization.run(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 90, in run
    self.advance(kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/manual.py", line 109, in advance
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 287, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/strategies/ddp.py", line 328, in training_step
    return self.model(*args, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1008, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 969, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/2021012/sruan01/riles/env/lib/python3.10/site-packages/pytorch_lightning/overrides/base.py", line 90, in forward
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 496, in training_step
    recon_x, z, z0, rho, eps0, gamma, mu, log_var = self.forward(x, pos)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 365, in forward
    recon_x, z0, mu, log_var, eps0 = self.vae_forward(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 165, in forward
    moments = self.encode(x, pemb)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 176, in encode
    moments = self.encoder(x, pemb).reshape(-1, 2 * self.latent_dim) # flattening for simplicity
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/autoencoders.py", line 62, in forward
    x = encoder(x, pemb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 148, in forward
    x = resnet_block(x, temb)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/gpfs1/home/2021012/sruan01/riles/discriminative-hvae-for-accurate-tumor-segmentation/modules/base.py", line 72, in forward
    h = h + self.temb_proj(temb)[:, :, None, None]
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/soft/Python3-DL/conda_envs/torch112/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:2 and cpu! (when checking argument for argument mat1 in method wrapper_addmm)
srun: error: my379: tasks 1-3: Exited with exit code 1
srun: Terminating job step 9575373.0
slurmstepd: error: *** STEP 9575373.0 ON my379 CANCELLED AT 2023-06-19T14:31:32 ***
srun: error: my380: tasks 4-7: Exited with exit code 1
srun: error: my379: task 0: Terminated
srun: Force Terminated job step 9575373.0
